name: Security

on:
  push:
    branches: [ main, phase-1-foundations ]
  pull_request:
    branches: [ main, phase-1-foundations ]
  schedule:
    # Run security checks daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  python-security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pip-audit safety

    - name: Install project dependencies
      run: |
        pip install -e ".[dev]"

    - name: Run pip-audit
      run: |
        echo "üîç Running pip-audit for Python dependency vulnerabilities..."
        pip-audit --desc --format=json --output=pip-audit-report.json || true
        pip-audit --desc

    - name: Run safety check
      run: |
        echo "üîç Running safety check for known security issues..."
        safety check --json --output safety-report.json || true
        safety check

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: python-security-reports
        path: |
          pip-audit-report.json
          safety-report.json

  container-security:
    runs-on: ubuntu-latest
    if: hashFiles('Dockerfile') != ''

    steps:
    - uses: actions/checkout@v4

    - name: Set up Trivy
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Run Trivy filesystem scan
      run: |
        echo "üîç Running Trivy filesystem scan..."
        trivy fs . --format json --output trivy-fs-report.json || true
        trivy fs . --severity HIGH,CRITICAL

    - name: Upload Trivy scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: trivy-security-reports
        path: |
          trivy-results.sarif
          trivy-fs-report.json

  security-summary:
    runs-on: ubuntu-latest
    needs: [python-security, container-security]
    if: always()

    steps:
    - name: Security scan summary
      run: |
        echo "üîí Security Scan Summary"
        echo "======================="
        echo "‚úÖ Python security audit: completed"
        echo "‚úÖ Container security scan: ${{ needs.container-security.result == 'skipped' && 'skipped (no Dockerfile)' || 'completed' }}"
        echo ""
        echo "Security checks completed successfully!"
